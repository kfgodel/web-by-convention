package ar.com.kfgodel.webbyconvention.api.auth;


import ar.com.kfgodel.nary.api.optionals.Optional;
import ar.com.kfgodel.webbyconvention.impl.auth.adapters.JettyIdentityAdapter;
import ar.com.kfgodel.webbyconvention.impl.auth.identity.ThreadLocalIdentityService;

/**
 * This type serves as a public access point to the application identity stored in the
 * current thread as a local variable. This identiti is managed by the ThreadLocalIdentityService
 * Created by kfgodel on 29/03/15.
 */
public interface WebUserId {


    /**
     * Gets the authenticated application id from the current thread context.<br>
     *     This id is generated by the authentication function given to the webserver config and made available to the current
     *     thread in every aunthenticated request.<br> Unauthenticated requests don't have an id available
     * @param <T> The type of expected id
     * @return The generated id, or an empty optional if this thread has no authenticated id
     */
    public static <T> Optional<T> getLoggedIn(){
        return ThreadLocalIdentityService.getFromThread()
          .mapNary(JettyIdentityAdapter::getApplicationIdentification);
    }
}
